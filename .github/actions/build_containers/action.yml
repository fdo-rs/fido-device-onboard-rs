name: "Build Containers"
description: "Build containers"
outputs:
  buildid:
    description: The build ID of this container build
    value: ${{ steps.buildid.outputs.buildid }}
  images:
    description: "Names of images that were built"
    value: ${{ steps.alltags.outputs.images }}
  tags:
    description: Image tags that were built
    value: ${{ steps.alltags.outputs.tags }}
  imagetags:
    description: "Image:tag pairs that were built"
    value: ${{ steps.alltags.outputs.imagetags }}

runs:
  using: "composite"
  steps:
  - name: Set unique build ID
    id: buildid
    shell: bash
    run: echo '::set-output name=buildid::build-${{ github.sha }}-${{ github.run_id }}-${{ github.run_attempt }}'

  - name: Container Metadata
    id: container-metadata
    uses: docker/metadata-action@v3
    with:
      images: "{0}"
      tags: |
        type=edge
        type=raw,value=latest,enable={{is_default_branch}}
        type=ref,event=branch
        type=ref,event=pr
        type=schedule
        type=semver,pattern={{version}}
        type=semver,pattern={{major}}.{{minor}}
        type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

  - name: Set all generated image build tags
    id: alltags
    shell: bash
    run: |
      rawtags="${{ format(steps.container-metadata.outputs.tags, 'imagename') }}"
      rawtags="${rawtags//$'\n'/ }"
      allimages=""
      alltags=""
      allimagetags=""
      for container in admin-cli manufacturing-server rendezvous-server serviceinfo-api-server owner-onboarding-server
      do
        allimages="$allimages $container"
      done
      for tag in "$rawtags"
      do
        alltags="$alltags ${tag//imagename:/}"
        for container in admin-cli manufacturing-server rendezvous-server serviceinfo-api-server owner-onboarding-server
        do
          allimagetags="$allimagetags ${tag//imagename/"$container"}"
        done
      done
      echo "::set-output name=images::${allimages:1}"
      echo "::set-output name=tags::${alltags:1}"
      echo "::set-output name=imagetags::${allimagetags:1}"

  - name: Perform build in container
    uses: redhat-actions/buildah-build@v2
    with:
      tags: fdo-build:${{ steps.buildid.outputs.buildid }}
      containerfiles: contrib/containers/build

  - name: Create admin-cli container
    uses: redhat-actions/buildah-build@v2
    with:
      containerfiles: contrib/containers/admin-cli
      tags: |
        ${{ format(steps.container-metadata.outputs.tags, 'admin-cli') }}
        admin-cli:${{ steps.buildid.outputs.buildid }}
      labels: ${{ steps.container-metadata.outputs.labels }}
      build-args: |
        BUILDID=${{ steps.buildid.outputs.buildid }}

  - name: Create manufacturing-server container
    uses: redhat-actions/buildah-build@v2
    with:
      containerfiles: contrib/containers/manufacturing-server
      tags: |
        ${{ format(steps.container-metadata.outputs.tags, 'manufacturing-server') }}
        manufacturing-server:${{ steps.buildid.outputs.buildid }}
      labels: ${{ steps.container-metadata.outputs.labels }}
      build-args: |
        BUILDID=${{ steps.buildid.outputs.buildid }}

  - name: Create rendezvous-server container
    uses: redhat-actions/buildah-build@v2
    with:
      containerfiles: contrib/containers/rendezvous-server
      tags: |
        ${{ format(steps.container-metadata.outputs.tags, 'rendezvous-server') }}
        rendezvous-server:${{ steps.buildid.outputs.buildid }}
      labels: ${{ steps.container-metadata.outputs.labels }}
      build-args: |
        BUILDID=${{ steps.buildid.outputs.buildid }}

  - name: Create serviceinfo-api-server container
    uses: redhat-actions/buildah-build@v2
    with:
      containerfiles: contrib/containers/serviceinfo-api-server
      tags: |
        ${{ format(steps.container-metadata.outputs.tags, 'serviceinfo-api-server') }}
        serviceinfo-api-server:${{ steps.buildid.outputs.buildid }}
      labels: ${{ steps.container-metadata.outputs.labels }}
      build-args: |
        BUILDID=${{ steps.buildid.outputs.buildid }}

  - name: Create owner-onboarding-server container
    uses: redhat-actions/buildah-build@v2
    with:
      containerfiles: contrib/containers/owner-onboarding-server
      tags: |
        ${{ format(steps.container-metadata.outputs.tags, 'owner-onboarding-server') }}
        owner-onboarding-server:${{ steps.buildid.outputs.buildid }}
      labels: ${{ steps.container-metadata.outputs.labels }}
      build-args: |
        BUILDID=${{ steps.buildid.outputs.buildid }}

  - name: Test containers
    shell: bash
    run: |
      for container in admin-cli manufacturing-server rendezvous-server serviceinfo-api-server owner-onboarding-server
      do
        podman run --rm $container:${{ steps.buildid.outputs.buildid }} --version
      done
